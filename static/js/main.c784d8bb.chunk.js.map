{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","console","log","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","errorInfo","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","components_CounterButton","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","Store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","es","store","src_containers_App"],"mappings":"yRAceA,EAZF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GACxB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAA1B,cACrBC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCeLS,EApBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OAEhB,OADAC,QAAQC,IAAI,YAERV,EAAAC,EAAAC,cAAA,WAEQM,EAAOG,IAAI,SAACC,EAAMC,GACd,OACIb,EAAAC,EAAAC,cAACY,EAAD,CACIC,IAAKF,EACLd,GAAIS,EAAOK,GAAGd,GACdF,KAAMW,EAAOK,GAAGhB,KAChBC,MAAOU,EAAOK,GAAGf,YCE9BkB,EAdG,SAAApB,GAAoB,IAAlBqB,EAAkBrB,EAAlBqB,aAEhB,OADAR,QAAQC,IAAI,aAERV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,SACIgB,KAAK,SACLC,YAAY,gBACZhB,UAAU,mCACViB,SAAUH,MCAPI,SARA,SAACC,GACZ,OACItB,EAAAC,EAAAC,cAAA,OAAKqB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAC/DJ,EAAMK,YCkBJC,cApBX,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACTC,UAAU,GAHCR,iFAODS,EAAOC,GACrBP,KAAKQ,SAAS,CAACH,UAAU,qCAIzB,OAAIL,KAAKI,MAAMC,SACJrC,EAAAC,EAAAC,cAAA,uCAGJ8B,KAAKV,MAAMK,gBAjBCc,aC2BZC,cA1BX,SAAAA,IAAc,IAAAb,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACVb,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,QAYJW,YAAc,WACVd,EAAKW,SAAU,SAAAJ,GACX,MAAO,CAACQ,MAAOR,EAAMQ,MAAQ,MAbjCf,EAAKO,MAAQ,CACVQ,MAAO,GAHAf,qFAMQgB,EAAWC,GAC7B,OAAId,KAAKI,MAAMQ,QAAUE,EAAUF,uCAcnC,OADAnC,QAAQC,IAAI,iBACLV,EAAAC,EAAAC,cAAA,UAAQ6C,MAAOf,KAAKV,MAAMyB,MAAOC,QAAShB,KAAKW,aAA/C,UAAoEX,KAAKI,MAAMQ,cAtBlEH,aCmBbQ,gMAjBWJ,EAAWC,GAC7B,OAAO,mCAKP,OADArC,QAAQC,IAAI,UAERV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACgD,EAAD,CAAeH,MAAO,gBAVjBN,aCwBfU,8LAGEnB,KAAKV,MAAM8B,mDAGN,IAAAC,EACsDrB,KAAKV,MAAxDgC,EADHD,EACGC,YAAaC,EADhBF,EACgBE,eAAgB/C,EADhC6C,EACgC7C,OAAQgD,EADxCH,EACwCG,UACvCC,EAAiBjD,EAAOkD,OAAO,SAAAC,GACjC,OAAOA,EAAM9D,KAAK+D,cAAcC,SAASP,EAAYM,iBAEzD,OAAOJ,EACHxD,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,CAAW9C,aAAcsC,IACzBvD,EAAAC,EAAAC,cAAC8D,EAAD,KACIhE,EAAAC,EAAAC,cAAC+D,EAAD,KACIjE,EAAAC,EAAAC,cAACgE,EAAD,CAAU1D,OAAQiD,cAnB5BhB,aA8BH0B,cA/CS,SAAA/B,GACpB,MAAO,CACHkB,YAAalB,EAAMgC,aAAad,YAChC9C,OAAQ4B,EAAMiC,cAAc7D,OAC5BgD,UAAWpB,EAAMiC,cAAcb,UAC/BlB,MAAOF,EAAMiC,cAAc/B,QAIR,SAACgC,GACxB,MAAO,CACHf,eAAgB,SAACgB,GAAD,OAAWD,ECdM,CACrCpD,KCR+B,sBDS/BsD,QDYuDD,EAAME,OAAOC,SAChEtB,gBAAiB,kBAAMkB,ECVI,SAACA,GAChCA,EAAS,CAAEpD,KCXuB,2BDYlCyD,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIT,EAAS,CAAEpD,KCbK,yBDayBsD,QAASO,MAC/DC,MAAM,SAAA1C,GAAK,OAAIgC,EAAS,CAAEpD,KCbE,wBDa2BsD,QAASlC,WDwC1D6B,CAA6ChB,GGjDtD8B,EAAqB,CACvB3B,YAAa,IAYX4B,EAAqB,CACvB1B,WAAW,EACXhD,OAAQ,GACR8B,MAAO,YCbL6C,EAASC,cAETC,EAAcC,YAAgB,CAAClB,aDDT,WAA6C,IAA5ChC,EAA4CmD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCN,EAAoBS,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC9D,OAAQG,EAAOxE,MACX,IDd2B,sBCevB,OAAOY,OAAO6D,OAAO,GAAIvD,EAAO,CAACkB,YAAaoC,EAAOlB,UACzD,QACI,OAAOpC,ICJgCiC,cDctB,WAA6C,IAA5CjC,EAA4CmD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCL,EAAoBQ,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQG,EAAOxE,MACX,ID3B8B,yBC4B1B,OAAOY,OAAO6D,OAAO,GAAIvD,EAAO,CAACoB,WAAW,IAChD,ID5B8B,yBC6B1B,OAAO1B,OAAO6D,OAAQ,GAAIvD,EAAO,CAAC5B,OAAQkF,EAAOlB,QAAShB,WAAW,IACzE,ID7B6B,wBC8BzB,OAAO1B,OAAO6D,OAAO,GAAIvD,EAAO,CAACE,MAAOoD,EAAOlB,QAAShB,WAAW,IACvE,QACI,OAAOpB,MCrBbwD,EAAQC,YAAYR,EAAaS,YAAgBC,IAAiBZ,IAExEa,IAASC,WAAWC,SAASC,eAAe,SAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUC,MAAOV,GAAO5F,EAAAC,EAAAC,cAACqG,EAAD","file":"static/js/main.c784d8bb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n    console.log('CardList');\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            email={robots[i].email}\n                        />)\n                })\n            }\n        </div>\n    )\n\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchChange}) => {\n    console.log('SearchBox');\n    return (\n        <div className=\"pa2\">\n        <input\n            type=\"search\"\n            placeholder='search robots'\n            className='pa3 ba b--green bg-lightest-blue'\n            onChange={searchChange}\n        />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good.</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from \"react\";\n\nclass CounterButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n           count: 0\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.count !== nextState.count) {\n            return true;\n        }\n            return false;\n    }\n\n    updateCount = () => {\n        this.setState( state => {\n            return {count: state.count + 1}\n        })\n    }\n\n    render () {\n        console.log('CounterButton');\n        return <button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\n    }\n\n}\n\nexport default CounterButton;","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n\n    render () {\n        console.log('Header');\n        return (\n            <div>\n                <h1 className=\"f1\">Robofriends</h1>\n                <CounterButton color={'red'}/>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport { setSearchField, requestRobots } from \"../actions\";\nimport Header from \"../components/Header\";\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\n\nclass App extends Component {\n\n    componentDidMount () {\n        this.props.onRequestRobots();\n    }\n\n    render() {\n        const { searchField, onSearchChange, robots, isPending } = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        return isPending ?\n            <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <Header/>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error}))\n\n\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants';\n\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD :\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true})\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign( {}, state, {robots: action.payload, isPending: false})\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport './index.css';\nimport 'tachyons';\nimport { createLogger} from \"redux-logger/src\";\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchRobots, requestRobots});\n\nconst Store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.createRoot(document.getElementById('root')).render(<Provider store={Store}><App /></Provider>);\n\n"],"sourceRoot":""}